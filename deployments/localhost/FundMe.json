{
    "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "priceFeedAddress",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "FundMe__NotOwner",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "MINIMUM_USD",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "cheaperWithdraw",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "fund",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "funder",
                    "type": "address"
                }
            ],
            "name": "getAddressToAmountFunded",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "index",
                    "type": "uint256"
                }
            ],
            "name": "getFunder",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getOwner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getPriceFeed",
            "outputs": [
                {
                    "internalType": "contract AggregatorV3Interface",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "transactionHash": "0xc13c5d5640c43ef8aaf97e79e5145c02f01b48a1f2431f4306509f92ca26f396",
    "receipt": {
        "to": null,
        "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
        "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
        "transactionIndex": 0,
        "gasUsed": "977874",
        "logsBloom": "0x
        "blockHash": "0x5731529ccf90a2427645d97b8200155fc36275e627b3b3dc950e7a8d50ca8b79",
        "transactionHash": "0xc13c5d5640c43ef8aaf97e79e5145c02f01b48a1f2431f4306509f92ca26f396",
        "logs": [],
        "blockNumber": 2,
        "cumulativeGasUsed": "977874",
        "status": 1,
        "byzantium": true
    },
    "args": ["0x5FbDB2315678afecb367f032d93F642f64180aa3"],
    "numDeployments": 1,
    "solcInputHash": "617e4374a1c4498855bd16ac5b2e6c91",
    "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Abhai Matta\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is to demo a  sample funding contracr\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/**\\n * @title A contract for crowd funding\\n * @author Abhai Matta\\n * @notice This contract is to demo a  sample funding contracr\\n * @dev This implements price feeds as our library\\n */\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    // event Funded(address indexed from, uint256 amount);\\n\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    \\n    AggregatorV3Interface private s_priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n    \\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < s_funders.length; funderIndex++){\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public onlyOwner{\\n        address[] memory funders = s_funders;\\n        for (uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address [] (0);\\n        (bool callSuccess, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function getOwner() public view returns(address){\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns(address){\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder) public view returns(uint256){\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns(AggregatorV3Interface){\\n        return s_priceFeed;\\n    }\\n}\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly\\n\\n\",\"keccak256\":\"0x9db020be35813b5a109826816501169fc1829e838242d9768503d7624689d674\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\r\\n\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        return uint256(answer * 10000000000);\\r\\n  }\\r\\n\\r\\n    // 1000000000\\r\\n    function getConversionRate(\\r\\n        uint256 ethAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\r\\n        // or (Both will do the same thing)\\r\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\r\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xcb6479a03b6f0040f92055a74805954816570d1e3485987e2db30520d6c16bc9\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "0x60a06040523480156200001157600080fd5b50604051620011d1380380620011d183398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b60805161105162000180600039600081816101fd01528181610446015281816105d001526107c001526110516000f3fe60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461012a578063b60d428814610155578063be2693f01461015f578063d7b4750c146101765761007b565b80630343fb25146100805780633ccfd60b146100bd5780636b69a592146100d4578063893d20e8146100ff575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610aab565b6101b3565b6040516100b49190610af1565b60405180910390f35b3480156100c957600080fd5b506100d26101fb565b005b3480156100e057600080fd5b506100e9610435565b6040516100f69190610af1565b60405180910390f35b34801561010b57600080fd5b50610114610442565b6040516101219190610b1b565b60405180910390f35b34801561013657600080fd5b5061013f61046a565b60405161014c9190610b95565b60405180910390f35b61015d610494565b005b34801561016b57600080fd5b506101746105ce565b005b34801561018257600080fd5b5061019d60048036038101906101989190610bdc565b61088c565b6040516101aa9190610b1b565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610280576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610325576000600182815481106102a6576102a5610c09565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080600101915050610283565b50600067ffffffffffffffff81111561034157610340610c38565b5b60405190808252806020026020018201604052801561036f5781602001602082028036833780820191505090505b50600190805190602001906103859291906109a1565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103ac90610c98565b60006040518083038185875af1925050503d80600081146103e9576040519150601f19603f3d011682016040523d82523d6000602084013e6103ee565b606091505b5050905080610432576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042990610d0a565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006104d3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108d490919063ffffffff16565b1015610514576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050b90610d76565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105629190610dc5565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610653576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106d757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161068d575b5050505050905060005b815181101561075b5760008282815181106106ff576106fe610c09565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806001019150506106e1565b50600067ffffffffffffffff81111561077757610776610c38565b5b6040519080825280602002602001820160405280156107a55781602001602082028036833780820191505090505b50600190805190602001906107bb9291906109a1565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161080290610c98565b60006040518083038185875af1925050503d806000811461083f576040519150601f19603f3d011682016040523d82523d6000602084013e610844565b606091505b5050905080610888576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087f90610d0a565b60405180910390fd5b5050565b6000600182815481106108a2576108a1610c09565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108e083610910565b90506000670de0b6b3a764000085836108f99190610df9565b6109039190610e6a565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561095e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109829190610f28565b5050509150506402540be400816109999190610fa3565b915050919050565b828054828255906000526020600020908101928215610a1a579160200282015b82811115610a195782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109c1565b5b509050610a279190610a2b565b5090565b5b80821115610a44576000816000905550600101610a2c565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a7882610a4d565b9050919050565b610a8881610a6d565b8114610a9357600080fd5b50565b600081359050610aa581610a7f565b92915050565b600060208284031215610ac157610ac0610a48565b5b6000610acf84828501610a96565b91505092915050565b6000819050919050565b610aeb81610ad8565b82525050565b6000602082019050610b066000830184610ae2565b92915050565b610b1581610a6d565b82525050565b6000602082019050610b306000830184610b0c565b92915050565b6000819050919050565b6000610b5b610b56610b5184610a4d565b610b36565b610a4d565b9050919050565b6000610b6d82610b40565b9050919050565b6000610b7f82610b62565b9050919050565b610b8f81610b74565b82525050565b6000602082019050610baa6000830184610b86565b92915050565b610bb981610ad8565b8114610bc457600080fd5b50565b600081359050610bd681610bb0565b92915050565b600060208284031215610bf257610bf1610a48565b5b6000610c0084828501610bc7565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c82600083610c67565b9150610c8d82610c72565b600082019050919050565b6000610ca382610c75565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610cf4600b83610cad565b9150610cff82610cbe565b602082019050919050565b60006020820190508181036000830152610d2381610ce7565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610d60601b83610cad565b9150610d6b82610d2a565b602082019050919050565b60006020820190508181036000830152610d8f81610d53565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610dd082610ad8565b9150610ddb83610ad8565b9250828201905080821115610df357610df2610d96565b5b92915050565b6000610e0482610ad8565b9150610e0f83610ad8565b9250828202610e1d81610ad8565b91508282048414831517610e3457610e33610d96565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e7582610ad8565b9150610e8083610ad8565b925082610e9057610e8f610e3b565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610eba81610e9b565b8114610ec557600080fd5b50565b600081519050610ed781610eb1565b92915050565b6000819050919050565b610ef081610edd565b8114610efb57600080fd5b50565b600081519050610f0d81610ee7565b92915050565b600081519050610f2281610bb0565b92915050565b600080600080600060a08688031215610f4457610f43610a48565b5b6000610f5288828901610ec8565b9550506020610f6388828901610efe565b9450506040610f7488828901610f13565b9350506060610f8588828901610f13565b9250506080610f9688828901610ec8565b9150509295509295909350565b6000610fae82610edd565b9150610fb983610edd565b9250828202610fc781610edd565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610fff57610ffe610d96565b5b828205841483151761101457611013610d96565b5b509291505056fea2646970667358221220b08e50307760f5541ead1af4f6e64310414ef384f451badfd8173564008a19ce64736f6c63430008180033",
    "deployedBytecode": "0x60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461012a578063b60d428814610155578063be2693f01461015f578063d7b4750c146101765761007b565b80630343fb25146100805780633ccfd60b146100bd5780636b69a592146100d4578063893d20e8146100ff575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610aab565b6101b3565b6040516100b49190610af1565b60405180910390f35b3480156100c957600080fd5b506100d26101fb565b005b3480156100e057600080fd5b506100e9610435565b6040516100f69190610af1565b60405180910390f35b34801561010b57600080fd5b50610114610442565b6040516101219190610b1b565b60405180910390f35b34801561013657600080fd5b5061013f61046a565b60405161014c9190610b95565b60405180910390f35b61015d610494565b005b34801561016b57600080fd5b506101746105ce565b005b34801561018257600080fd5b5061019d60048036038101906101989190610bdc565b61088c565b6040516101aa9190610b1b565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610280576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610325576000600182815481106102a6576102a5610c09565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080600101915050610283565b50600067ffffffffffffffff81111561034157610340610c38565b5b60405190808252806020026020018201604052801561036f5781602001602082028036833780820191505090505b50600190805190602001906103859291906109a1565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103ac90610c98565b60006040518083038185875af1925050503d80600081146103e9576040519150601f19603f3d011682016040523d82523d6000602084013e6103ee565b606091505b5050905080610432576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042990610d0a565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006104d3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108d490919063ffffffff16565b1015610514576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050b90610d76565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105629190610dc5565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610653576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106d757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161068d575b5050505050905060005b815181101561075b5760008282815181106106ff576106fe610c09565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806001019150506106e1565b50600067ffffffffffffffff81111561077757610776610c38565b5b6040519080825280602002602001820160405280156107a55781602001602082028036833780820191505090505b50600190805190602001906107bb9291906109a1565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161080290610c98565b60006040518083038185875af1925050503d806000811461083f576040519150601f19603f3d011682016040523d82523d6000602084013e610844565b606091505b5050905080610888576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087f90610d0a565b60405180910390fd5b5050565b6000600182815481106108a2576108a1610c09565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108e083610910565b90506000670de0b6b3a764000085836108f99190610df9565b6109039190610e6a565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561095e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109829190610f28565b5050509150506402540be400816109999190610fa3565b915050919050565b828054828255906000526020600020908101928215610a1a579160200282015b82811115610a195782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109c1565b5b509050610a279190610a2b565b5090565b5b80821115610a44576000816000905550600101610a2c565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a7882610a4d565b9050919050565b610a8881610a6d565b8114610a9357600080fd5b50565b600081359050610aa581610a7f565b92915050565b600060208284031215610ac157610ac0610a48565b5b6000610acf84828501610a96565b91505092915050565b6000819050919050565b610aeb81610ad8565b82525050565b6000602082019050610b066000830184610ae2565b92915050565b610b1581610a6d565b82525050565b6000602082019050610b306000830184610b0c565b92915050565b6000819050919050565b6000610b5b610b56610b5184610a4d565b610b36565b610a4d565b9050919050565b6000610b6d82610b40565b9050919050565b6000610b7f82610b62565b9050919050565b610b8f81610b74565b82525050565b6000602082019050610baa6000830184610b86565b92915050565b610bb981610ad8565b8114610bc457600080fd5b50565b600081359050610bd681610bb0565b92915050565b600060208284031215610bf257610bf1610a48565b5b6000610c0084828501610bc7565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c82600083610c67565b9150610c8d82610c72565b600082019050919050565b6000610ca382610c75565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610cf4600b83610cad565b9150610cff82610cbe565b602082019050919050565b60006020820190508181036000830152610d2381610ce7565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610d60601b83610cad565b9150610d6b82610d2a565b602082019050919050565b60006020820190508181036000830152610d8f81610d53565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610dd082610ad8565b9150610ddb83610ad8565b9250828201905080821115610df357610df2610d96565b5b92915050565b6000610e0482610ad8565b9150610e0f83610ad8565b9250828202610e1d81610ad8565b91508282048414831517610e3457610e33610d96565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e7582610ad8565b9150610e8083610ad8565b925082610e9057610e8f610e3b565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610eba81610e9b565b8114610ec557600080fd5b50565b600081519050610ed781610eb1565b92915050565b6000819050919050565b610ef081610edd565b8114610efb57600080fd5b50565b600081519050610f0d81610ee7565b92915050565b600081519050610f2281610bb0565b92915050565b600080600080600060a08688031215610f4457610f43610a48565b5b6000610f5288828901610ec8565b9550506020610f6388828901610efe565b9450506040610f7488828901610f13565b9350506060610f8588828901610f13565b9250506080610f9688828901610ec8565b9150509295509295909350565b6000610fae82610edd565b9150610fb983610edd565b9250828202610fc781610edd565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610fff57610ffe610d96565b5b828205841483151761101457611013610d96565b5b509291505056fea2646970667358221220b08e50307760f5541ead1af4f6e64310414ef384f451badfd8173564008a19ce64736f6c63430008180033",
    "devdoc": {
        "author": "Abhai Matta",
        "details": "This implements price feeds as our library",
        "kind": "dev",
        "methods": {},
        "title": "A contract for crowd funding",
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {},
        "notice": "This contract is to demo a  sample funding contracr",
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 324,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_addressToAmountFunded",
                "offset": 0,
                "slot": "0",
                "type": "t_mapping(t_address,t_uint256)"
            },
            {
                "astId": 327,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_funders",
                "offset": 0,
                "slot": "1",
                "type": "t_array(t_address)dyn_storage"
            },
            {
                "astId": 339,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_priceFeed",
                "offset": 0,
                "slot": "2",
                "type": "t_contract(AggregatorV3Interface)104"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
            },
            "t_contract(AggregatorV3Interface)104": {
                "encoding": "inplace",
                "label": "contract AggregatorV3Interface",
                "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            }
        }
    }
}
